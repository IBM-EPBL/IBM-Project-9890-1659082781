# -*- coding: utf-8 -*-
"""Mini-project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SDIeWRvimSkVG60d8EJGN225pUDpCN57
"""

from tensorflow.keras.models import Sequential

from keras.preprocessing.image import ImageDataGenerator

train_datagen=ImageDataGenerator(rescale=1./255, shear_range=0.2,zoom_range=0.2,horizontal_flip=True)
test_datagen=ImageDataGenerator(rescale=1./255)

from google.colab import drive
drive.mount('/content/drive')

x_train = train_datagen.flow_from_directory('/content/drive/MyDrive/project dataset/Dataset/train',target_size=(64,64),batch_size=5,color_mode='grayscale',class_mode='categorical')
x_test = test_datagen.flow_from_directory('/content/drive/MyDrive/project dataset/Dataset/test',target_size=(64, 64),batch_size=5,color_mode='grayscale',class_mode='categorical')

import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense 
from tensorflow.keras.layers import Flatten
from tensorflow.keras.layers import Dropout
from tensorflow.keras.layers import Convolution2D,MaxPooling2D
from tensorflow.keras.preprocessing.image import ImageDataGenerator

"""INITIALIZING THE MODEL"""

model= Sequential()

model.add(Convolution2D(32,(3, 3),input_shape=(64, 64, 1), activation='relu')) 
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Convolution2D(32, (3, 3), activation='relu')) 
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Flatten())

model.add(Dense(units=512,activation='relu'))

model.add(Dense(units=6,activation='softmax'))

model.summary()

"""MODEL COMPILATION"""

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

model.fit_generator(x_train,
                    steps_per_epoch = 594/3,
                    epochs = 25,
                    validation_data = x_test,
                    validation_steps = 30/3)

model.save('gesture.h5')

model_json = model.to_json()

with open("model-bw.json", 'w') as json_file:

  json_file.write(model_json)

"""Model buliding"""

from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
model = load_model("gesture.h5") #loading the model for testing
path = "/content/drive/MyDrive/project dataset/Dataset/test/0/1.jpg"

# Commented out IPython magic to ensure Python compatibility.
# %pylab inline
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
imgs = mpimg.imread(path)
imgplot = plt.imshow(imgs)
plt.show()

#loading of the image
img = image.load_img(path,
                     color_mode='grayscale',
                     target_size= (64,64))
x = image.img_to_array(img)#image to array
x.shape

type(x)

#changing the shape
x = np.expand_dims(x,axis = 0)

x.shape

"""PREDICTING OUR RESULTS"""

pred_x= np.argmax(model.predict(x),axis=-1)#predicting the classes
pred_x

index=['0','1','2','3','4','5']
result=str(index[pred_x[0]])
result

import numpy as np
p = []

for i in range(0,6):
    for j in range(0,5):
        path = "/content/drive/MyDrive/project dataset/Dataset/test/2/0.jpg"
        img = image.load_img(path,color_mode = "grayscale",target_size= (64,64))
        x = image.img_to_array(img)
        x = np.expand_dims(x,axis = 0)
        pred = np.argmax(model.predict(x), axis=-1)
        p.append(pred)

print(p)

result = []
index=['0','1','2','3','4','5']
for i in p:
    result.append(index[i[0]])
    
print(result)

